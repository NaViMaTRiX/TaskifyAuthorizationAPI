using System.Text.RegularExpressions;
using Microsoft.AspNetCore.Http;

namespace AuthAPI.Shared.Helpers;

public static class IpAddressHelper
{
    public static string GetClientIpAddress(HttpContext context)
    {
        try
        {
            // üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º `X-Forwarded-For` (—Å–ø–∏—Å–æ–∫ IP —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
            var forwardedIps = context.Request.Headers["X-Forwarded-For"].FirstOrDefault();
            if (!string.IsNullOrEmpty(forwardedIps))
            {
                // –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π "–ø—É–±–ª–∏—á–Ω—ã–π" IP, –µ—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ
                var ipList = forwardedIps.Split(',').Select(ip => ip.Trim()).ToList();
                var validIp = ipList.FirstOrDefault(IsValidIp);
                if (!string.IsNullOrEmpty(validIp)) return validIp;
            }

            // üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º `X-Real-IP` (–∏–Ω–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–º–µ—Å—Ç–æ `X-Forwarded-For`)
            var realIp = context.Request.Headers["X-Real-IP"].FirstOrDefault();
            if (!string.IsNullOrEmpty(realIp) && IsValidIp(realIp))
            {
                return realIp;
            }

            // üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º `RemoteIpAddress` (IP-–∞–¥—Ä–µ—Å –ø—Ä—è–º–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è)
            var remoteIp = context.Connection.RemoteIpAddress?.ToString();
            if (!string.IsNullOrEmpty(remoteIp) && IsValidIp(remoteIp))
            {
                return remoteIp == "::1" || remoteIp == "127.0.0.1" ? "localhost" : remoteIp;
            }

            return "unknown"; // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
        }
        catch (Exception ex)
        {
            Console.WriteLine($"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ IP-–∞–¥—Ä–µ—Å–∞: {ex.Message}");
            return "unknown";
        }
    }

// üîπ –ú–µ—Ç–æ–¥ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ IP-–∞–¥—Ä–µ—Å–∞
    private static bool IsValidIp(string ip)
    {
        return Regex.IsMatch(ip, @"^(?:\d{1,3}\.){3}\d{1,3}$|^(?:[a-fA-F0-9:]+:+)+[a-fA-F0-9]+$");
    }

}
